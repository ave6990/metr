[{"name":"archive","sql":"select\n    usability, protocol_number, count, date, counteragent, mi_type, serial_number, manufacture_year, registry_number, methodology, interval, components, channels, reference_codes, unusability, engineer\nfrom\n    archive\nwhere\n    --mi_type like '%X-am%'\n    --protocol_number = 461 and engineer = 61\n    --serial_number like '%ER414212292%'\n    --instr('ER414212268 ER414212263 ER414212261 ER414212272 ER414212264 ER414212265 ER414212215', serial_number)\n    --count like '%3008%'\n    --date > '2022-03-20'\n    --id = 11597\n    registry_number like '%8261%'\n    --and to_lower(mi_type) like '%маг%'\n    --and serial_number = 1557\n    --to_lower(counteragent) like '%лукойл%'\n    --and to_lower(mi_type) like '%стм%'\norder by\n    date desc"},
{"name":"cgm","sql":"select\n    mi.id,\n    m.registry_number,\n    mi.type,\n    ch.channel,\n    ch.component,\n    ch.range_from || ' - ' || ch.range_to || ' ' || ch.units as rng,\n    r.\"from\" || ' - ' || r.\"to\" || ' ' || ch.units as sub_rng,\n    cgm.number,\n    ifnull(cgm.nominal  || ' ' || cgm.units || ' ± ' || cgm.tolerance || ' ' || iif(cgm.tolerance_type = 1, '%', cgm.units), 0) as cgm_desc,\n    cgm.comment\nfrom\n    methodology as m\ninner join\n    mi on mi.methodology_id = m.id\ninner join\n    channels as ch on ch.methodology_id = m.id\ninner join\n    ranges as r on r.channel_id = ch.id\ninner join\n    cgm on cgm.range_id = r.id\nwhere\n    mi.id = 607\norder by\n    mi.id, ch.component, cgm.comment, rng, sub_rng, cgm.number"},
{"name":"channels_count","sql":"with tab as (\nselect\n    c.date, sum(v.channels) as sch\nfrom\n    verification as v\ninner join\n    conditions as c\n    on c.id = v.conditions\nwhere\n    cast(strftime('%m', c.date) as integer) = 5\n    and cast(strftime('%Y', c.date) as integer) = 2023\n    and v.engineer = 3514\n    and (v.comment is null or v.comment not like '11')\n    and (v.comment is null or v.comment not like 'Леонтьев')\ngroup by\n    c.date\n)\nselect * from tab\nunion\nselect\n    'итого', sum(sch)\nfrom\n    tab\norder by\n    date desc"},
{"name":"conditions","sql":"select\n    *\nfrom\n    conditions\nwhere\n    --date > '2023-01-01' and date <= date('now')\n    --date = '2023-02-03'\n    id = 831\norder by date desc"},
{"name":"counteragents","sql":"select\n    id, name, short_name, inn, type, address\nfrom\n    counteragents\nwhere\n    to_lower(id || ', ' || iif(short_name = '', name, short_name)) like \"%16%\""},
{"name":"gso","sql":"select\n    id, number, available, iif(expiration_date <= date('now'), 'просрочен', '') as past, number_1c, components, concentration, units, pass_number, level, date, expiration_date\nfrom\n    gso\nwhere\n    --number_1c = 1105\n    --expiration_date > date('now')  -- поиск по сроку годности\n    --and\n    lower(components) like '%h2s%'\n    --instr('1130; 1132', number_1c) > 0  -- поиск по номеру 1С\norder by\n    past, available desc, components, conc"},
{"name":"journal","sql":"select * from journal\nwhere\n    upload is null\n    --date = '2023-02-02'\n    --upload > 0\n    --cast(protocol_number as integer) > 61\norder by\n    cast(protocol_number as integer)\n"},
{"name":"mi","sql":"SELECT\n    mi.id,\n    m.registry_number,\n    mi.interval,\n    mi.type,\n    mi.methodology_id,\n    m.short_name,\n    mi.components,\n    mi.scope,\n    mi.channels,\n    group_concat('п. ' || ops.section || ' ' || ops.name, '; ') as operations,\n    m.temperature,\n    m.humidity,\n    m.pressure,\n    m.voltage,\n    m.frequency,\n    m.other,\n    mi.protocol,\n    mi.protolang,\n    mi.sw_name,\n    mi.sw_version,\n    mi.sw_checksum,\n    mi.sw_algorithm,\n    mi.comment\nFROM\n    mi\nleft join\n    methodology as m\n    on mi.methodology_id = m.id\nleft join\n    verification_operations as ops\n    on ops.methodology_id = m.id\nwhere\n    to_lower(type || ', ' || m.registry_number) LIKE '%28384%'\n    --and comment like'%с 2021%'\n    --mi.id = 212\n    --m.id = 290\n    --m.id = 309\n    --protocol like 'protocol%'\ngroup by\n    mi.id"},
{"name":"protocol","sql":"select * from protocol\nwhere\n    upload is null\n    --protocol_number =288\n    --date = '2023-03-06'\n    --and name = 'первичная'\n    --and serial_number like \"%020r2\""},
{"name":"references","sql":"select\n    id,\n    number_1c,\n    mi_name,\n    mi_type,\n    serial_number,\n    department\nfrom\n    refs\nwhere\n    to_lower(department) like '%физ%хим%'\n    --and serial_number = 1670\n    --and id = 2827\n    and to_lower(mi_type) like '%гнг%'"},
{"name":"mi_without_channels","sql":"select\n    mi.id,\n    m.id,\n    m.registry_number,\n    mi.type\nfrom\n    methodology as m\ninner join\n    mi on mi.methodology_id = m.id\nleft join\n    channels as ch on ch.methodology_id = m.id\nwhere\n    ch.methodology_id is null\n    and to_lower(type) like '%320%'\n--group by m.id"},
{"name":"use_gso","sql":"select 'ГСО ' || gso.number || ' ' || gso.components || ' ' || gso.concentration || ' ' || gso.units as gso_name, count(*) as count\nfrom gso\ninner join archive\n    on instr(to_lower(archive.reference_codes), 'со' || gso.number_1c)\nwhere\n    archive.date > '2022-01-01' and archive.date < '2023-01-01'\ngroup by gso_name\norder by \n    gso.components, gso.conc"},
{"name":"used_refs","sql":"select 'ДОП. ЭТАЛОНЫ' as type, refs.id, refs.mi_type, refs.serial_number\nfrom refs\ninner join\n    v_opt_refs on refs.id = v_opt_refs.ref_id\ngroup by\n    refs.id\nunion\nselect 'ЭТАЛОНЫ' as type, refs.id, refs.mi_type, refs.serial_number\nfrom refs\ninner join\n    v_refs on refs.id = v_refs.ref_id\ngroup by\n    refs.id\norder by\n    type, mi_type"},
{"name":"popular_mi","sql":"select mi_type, methodology, count(*) as cnt\nfrom view_archive\ngroup by mi_type\nhaving cnt > 50\norder by cnt desc"},
{"name":"popular_mi_without_channels","sql":"select\n    mi.id,\n    m.id,\n    m.registry_number,\n    mi.type,\n    pop.cnt\nfrom\n    methodology as m\ninner join\n    mi on mi.methodology_id = m.id\nleft join\n    channels as ch on ch.methodology_id = m.id\ninner join\n    (select mi_type, registry_number, count(*) as cnt\n        from view_archive\n        group by mi_type\n        having cnt > 50) as pop on pop.registry_number = m.registry_number\nwhere\n    ch.methodology_id is null\ngroup by mi.id\norder by pop.cnt desc"},
{"name":"cgm_at_component","sql":"select\n    cgm.id,\n    ch.channel,\n    ch.component,\n    '(' || ch.range_from || ' - ' || ch.range_to || ') ' || ch.units as rng,\n    '(' || r.\"from\" || ' - ' || r.\"to\" || ') ' || ch.units as sub_rng,\n    cgm.number,\n    ifnull(cgm.nominal  || ' ' || cgm.units || ' ± ' || cgm.tolerance || ' ' || iif(cgm.tolerance_type = 1, '%', cgm.units), 0) as cgm_desc,\n    cgm.comment\nfrom\n    channels as ch\ninner join\n    ranges as r on r.channel_id = ch.id\ninner join\n    cgm on cgm.range_id = r.id\nwhere component like 'CH4'\norder by\n   cgm.nominal"},
{"name":"cgm_intersection","sql":"with c as (select 'CO' as name),\n    temp as (\n    select * from view_cgm where component = (select name from c) and nominal_ppm <> 0\n    )\nselect\n    *,\n    (\n        select \n            count(*)\n        from\n            view_cgm\n        where\n            view_cgm.component = (select name from c)\n            and view_cgm.nominal_ppm <> 0\n            and temp.nom_from_ppm <= view_cgm.nom_to_ppm\n            and temp.nom_to_ppm >= view_cgm.nom_from_ppm\n    ) as intersection\nfrom\n    temp\norder by\n    nominal_ppm, intersection desc"},
{"name":"channels","sql":"select\n    ch.id,\n    ch.channel,\n    ch.component,\n    '(' || ch.range_from || ' - ' || ch.range_to || ') ' || ch.units as rng\nfrom\n    channels as ch\nwhere\n    ch.methodology_id = 245\norder by\n    ch.component, ch.range_to"},
{"name":"cgm_at_mi","sql":"select\n    cgm.id,\n    ch.channel,\n    ch.component,\n    '(' || ch.range_from || ' - ' || ch.range_to || ') ' || ch.units as rng,\n    '(' || m.r_from || ' - ' || m.r_to || ') ' || ch.units as sub_rng,\n    cgm.number,\n    ifnull(cgm.nominal  || ' ' || cgm.units || ' ± ' || cgm.tolerance || ' ' || iif(cgm.tolerance_type = 1, '%', cgm.units), 0) as cgm_desc,\n    cgm.comment\nfrom\n    channels as ch\ninner join\n    metrology as m on m.channel_id = ch.id\ninner join\n    cgm on cgm.metrology_id = m.id\nwhere\n    ch.methodology_id = (\n        select mi.methodology_id from mi where mi.id = 573\n    )\norder by\n   ch.channel"},
{"name":"channels_at_verification","sql":"select\n    ch.id,\n    ch.channel,\n    ch.component,\n    '(' || ch.range_from || ' - ' || ch.range_to || ') ' || ch.units as rng\nfrom\n    verification as v\ninner join\n    v_channels on v_channels.v_id = v.id\ninner join\n    channels as ch on ch.id = v_channels.channel_id\nwhere\n    v.id = 378"},
{"name":"stat_usability_of_type","sql":"with args as (select '%микросенс%' as type),\n    data as (\n        select\n            usability, count(*) as cnt\n        from\n            view_archive\n        where\n            to_lower(mi_type) like (select type from args)\n        group by \n            usability\n    ),\n    summary as (\n        select\n            sum(cnt) as sum\n        from\n            data\n    )\nselect 'Итого' as usability, sum, '' as percentage from summary\nunion\nselect\n    usability, cnt, round(cast(cnt as real) / (select sum from summary) * 100, 1)\nfrom\n    data"},
{"name":"view_cgm","sql":"select\n    cg.id,\n    ch.channel,\n    ch.component,\n    '(' || ch.range_from || ' - ' || ch.range_to || ') ' || ch.units as rng,\n    '(' || m.r_from || ' - ' || m.r_to || ') ' || ch.units as sub_rng,\n    cg.number,\n    ifnull(cg.nominal  || ' ' || cg.units || ' ± ' || cg.tolerance || ' ' || iif(cg.tolerance_type = 1, '%', cg.units), 0) as cgm_desc,\n    case cg.units \n        when '% об.' \n            then nominal * 10000\n        when 'мг/м³'\n            then round(nominal / (select coeff from gases where component = ch.component), 4)\n        else\n            nominal\n        end as nominal_ppm,\n    case cg.units \n        when '% об.' \n            then (nominal - iif(tolerance_type > 0, tolerance * nominal / 100, tolerance)) * 10000\n        when 'мг/м³'\n            then round((nominal - iif(tolerance_type > 0, tolerance * nominal / 100, tolerance)) / (select coeff from gases where component = ch.component), 4)\n        else\n            (nominal - iif(tolerance_type > 0, tolerance * nominal / 100, tolerance))\n        end\n        as nom_from_ppm,\n    case cg.units \n        when '% об.' \n            then (nominal + iif(tolerance_type > 0, tolerance * nominal / 100, tolerance)) * 10000\n        when 'мг/м³'\n            then round((nominal + iif(tolerance_type > 0, tolerance * nominal / 100, tolerance)) / (select coeff from gases where component = ch.component), 4)\n        else\n            (nominal + iif(tolerance_type > 0, tolerance * nominal / 100, tolerance))\n        end\n        as nom_to_ppm,\n    cg.comment\nfrom\n    channels as ch\ninner join\n    metrology as m on m.channel_id = ch.id\ninner join\n    cgm as cg on cg.metrology_id = m.id\norder by\n    ch.id, ch.component, nominal_ppm"},
{"name":"journal","sql":"SELECT\n    v.id,\n    v.count,\n    ifnull(ca.short_name, ca.name) AS counteragent,\n    v.mi_type,\n    v.serial_number,\n    ifnull(v.manufacture_year, '') AS manufacture_year,\n    met.registry_number,\n    met.short_name AS methodology,\n    v.interval,\n    coalesce(v.components, '-') AS components,\n    v.channels,\n    ifnull(view_v_refs.journal || '; ', '') || ifnull(view_v_gso.journal, '') as reference_codes,\n    v.area,\n    vtypes.name AS verification_type,\n    v.protocol_number,\n    --iif(ifnull(v.unusability, '-') = '-', '+', '-') AS usability,\n    iif(v_op.v_id is null, '+', '-') AS usability,\n    date(cond.date) AS date,\n    \"-\" AS sticker_number,\n    \"-\" AS sign_mi,\n    \"-\" AS sign_pass,\n    cond.temperature,\n    cond.humidity,\n    iif(met.pressure is null, '-', cond.pressure) AS pressure,\n    iif(met.voltage is null, '-', ifnull(v.voltage, cond.voltage)) AS voltage,\n    iif(met.frequency is null, '-', cond.frequency) AS frequency,\n    iif(met.other is null, '-', cond.other) AS other,\n    \"-\" AS factor_7,\n    \"-\" AS factor_8,\n    \"-\" AS schema,\n    \"-\" AS level,\n    \"-\" AS reference_registry,\n    coalesce(v.scope, '-') AS scope,\n    iif(vtypes.name LIKE '%первич%', '+', '-') AS send_protocol,\n    ifnull('не соответствует п. ' || ifnull(op.section || ' ', '') || op.name, '') || ifnull (' (' || v_op.unusability || ')', '') AS unusability,\n    \"-\" AS calibration_base,\n    v.upload,\n    en.number AS engineer,\n    v.comment\nFROM\n    verification AS v\nJOIN\n    counteragents AS ca ON v.counteragent = ca.id\nINNER JOIN\n    conditions AS cond ON v.conditions = cond.id\ninner join\n    engineers as en on v.engineer = en.id\nJOIN\n    methodology AS met ON v.methodology_id = met.id\nINNER JOIN\n    verification_types AS vtypes ON v.verification_type = vtypes.id\nleft join\n    v_operations as v_op on v.id = v_op.v_id and v_op.result < 0\nleft join\n    verification_operations as op on v_op.op_id = op.id\nfull outer JOIN\n    view_v_refs\n    on view_v_refs.id = v.id\nfull outer JOIN\n    view_v_gso\n    on view_v_gso.id = v.id"},
{"name":"verification_refs","sql":"with mr_temp as (select date('now') as cdate)\nselect\n    'СИ' as type,\n    mr.v_id,\n    mr.ref_id,\n    r.mi_name,\n    r.mi_type,\n    null as components,\n    null as value,\n    r.serial_number,\n    r.number_1c,\n    null as level,\n    '' as date,\n    r.expiration_date,\n    '' as available,\n    iif(r.expiration_date <= (select cdate from mr_temp), 'просрочен', '') as expiration\nfrom\n    v_opt_refs as mr\ninner join\n    refs as r on mr.ref_id = r.id\nunion\nselect\n    'ЭТАЛОН',\n    mr.v_id,\n    mr.ref_id,\n    r.mi_name,\n    r.mi_type,\n    null as components,\n    null as value,\n    r.serial_number,\n    r.number_1c,\n    null as level,\n    '' as date,\n    r.expiration_date,\n    '' as available,\n    iif(r.expiration_date <= (select cdate from mr_temp), 'просрочен', '') as expiration\nfrom\n    v_refs as mr\ninner join\n    refs as r on mr.ref_id = r.id\nunion\nselect\n    'ГСО',\n    mr.v_id,\n    mr.gso_id,\n    'ГСО ' || gso.number,\n    null as type,\n    gso.components,\n    gso.concentration || ' ' || gso.units,\n    gso.pass_number,\n    'со' || gso.number_1c,\n    gso.level,\n    gso.date,\n    gso.expiration_date,\n    gso.available,\n    iif(gso.expiration_date <= (select cdate from mr_temp), 'просрочен', '') as expiration\nfrom\n    v_gso as mr\ninner join\n    gso\non\n    mr.gso_id = gso.id\norder by type desc"},
{"name":"protocol","sql":"SELECT \n    iif(vt.name like 'первич%', 'первичной', 'периодической') as verification_type,\n    '9' AS department,\n    en.number AS engineer,\n    v.protocol_number,\n    strftime('%Y', date(c.date)) AS year,\n    date(c.date) AS date,\n    v.count,\n    met.mi_name || ', ' || v.mi_type AS name,\n    v.manufacture_year,\n    v.serial_number,\n    met.registry_number,\n    coalesce(v.components, '-') AS components,\n    ifnull('(' || v.scope || ')', '') AS scope,\n    ifnull(ca.short_name, ca.name) AS counteragent,\n    ifnull(ca.address, '') as address,\n    ifnull(met.name, met.short_name) AS methodology,\n    replace(c.temperature, '.', ',') AS temperature,\n    replace(c.humidity, '.', ',') AS humidity,\n    replace(ifnull(c.pressure, '-'), '.', ',') AS pressure,\n    iif(met.voltage is null, '-', replace(coalesce(v.voltage, c.voltage, '-'), '.', ',')) AS voltage,\n    iif(met.frequency is null, '-', replace(ifnull(c.frequency, '-'), '.', ',')) AS frequency,\n    iif(met.other is null, '-', ifnull(c.other, '-')) AS other,\n    replace(ifnull(' (' || met.temperature || ') °C', '-'), '.', ',') AS pr_temperature,\n    replace(ifnull(' (' || met.humidity || ') %', '-'), '.', ',') AS pr_humidity,\n    replace(ifnull(' (' || met.pressure || ') кПа', '-'), '.', ',') AS pr_pressure,\n    replace(ifnull(' (' || met.voltage || ') В', '-'), '.', ',') AS pr_voltage,\n    replace(ifnull(' (' || met.frequency || ') Гц', '-'), '.', ',') AS pr_frequency,\n    replace(ifnull(' (' || met.other || ')', '-'), '.', ',') AS pr_other,\n    ifnull(view_v_refs.protocol || '; ', '') || ifnull(view_v_gso.protocol, '') as mi_references,\n    ifnull('; ' || view_v_opt_refs.protocol, '') AS optional_references,\n    ifnull('СИ непригодно к применению, не соответствует п. ' || ifnull(op.section || ' ', '') || op.name || ifnull(' (' || v_op.unusability || ')', ''), iif(ifnull(v.scope, '') = '', 'СИ пригодно к применению', 'СИ пригодно к применению в объеме проведенной поверки')) AS conclusion,\n    en.last_name || ' ' || en.first_name || ' ' || en.second_name AS engineer_name,\n    v.protocol,\n    v.protolang,\n    v.upload,\n    v.id\nFROM\n    verification AS v\nINNER JOIN\n    counteragents AS ca ON v.counteragent = ca.id\nINNER JOIN\n    conditions AS c ON v.conditions = c.id\nINNER JOIN\n    methodology AS met ON v.methodology_id = met.id\ninner join\n    engineers as en on v.engineer = en.id\ninner join\n    verification_types as vt on v.verification_type = vt.id\nleft join\n    v_operations as v_op on v.id = v_op.v_id and v_op.result < 0\nleft join\n    verification_operations as op on op.id = v_op.op_id\nfull outer JOIN\n    view_v_refs\n    on view_v_refs.id = v.id\nfull outer JOIN\n    view_v_gso\n    on view_v_gso.id = v.id\nfull outer JOIN\n    view_v_opt_refs\n    on view_v_opt_refs.id = v.id\nORDER BY\n    CAST (v.protocol_number AS integer)"},
{"name":"v_gso","sql":"with temp as (\n    select \n        100 as verification_id,\n        1130 as number_1c,\n        100 as gso_id\n    )\nselect\n    gso.available,\n    v_gso.v_id,\n    v_gso.gso_id,\n    gso.components,\n    gso.concentration,\n    gso.units,\n    gso.pass_number,\n    gso.number_1c,\n    gso.level,\n    gso.date,\n    gso.expiration_date\n    --iif(expiration_date <= (select cdate from temp), 'просрочен', '')\nfrom\n    v_gso\ninner join\n    gso\non\n    v_gso.gso_id = gso.id\nwhere\n    --expiration_date > (select cdate from temp)  -- поиск по сроку годности\n    --instr('1130; 1132', number_1c) > 0  -- поиск по номеру 1С\n    v_gso.v_id = (select verification_id from temp)\n    --or mi_gso.mi_id = 37\norder by\n     v_gso.v_id, gso.available desc, gso.components, gso.conc"},
{"name":"v_refs","sql":"with temp as (\n    select\n        614 as verification_id,\n        date('now') as cdate\n)\nselect\n    mi_id, ref_id, r.mi_type, r.serial_number, r.number_1c, r.expiration_date\nfrom\n    mi_references\njoin\n    refs as r\n    on ref_id = r.id\nwhere\n     mi_id = (select verification_id from temp)\norder by\n    expiration_date"},
{"name":"v_opt_refs","sql":"with temp as (\n    select\n        378 as verification_id,\n        date('now') as cdate\n)\nselect\n    mi_id, ref_id, r.mi_type, r.serial_number, r.number_1c,r.expiration_date\nfrom\n    mi_opt_refs\njoin\n    refs as r\n    on ref_id = r.id\nwhere\n     mi_id = (select verification_id from temp)"},
{"name":"v_all_refs","sql":"with temp as (\n    select\n        100 as verification_id\n)\nselect\n    *\nfrom\n    verification_refs\nwhere\n    v_id = (select verification_id from temp)"},
{"name":"find_records","sql":"select\n    v.id,\n    v.protocol_number,\n    v.count,\n    c.date,\n    v.verification_type,\n    v.mi_type,\n    met.registry_number,\n    v.serial_number,\n    v.manufacture_year,\n    v.components,\n    v.scope,\n    v.channels,\n    v.protocol,\n    v.protolang\nfrom\n    verification as v\ninner join\n    methodology as met\n    on met.id = v.methodology_id\ninner join\n    conditions as c\n    on c.id = v.conditions\nwhere\n    --v.id = 349\n    --v.serial_number like \"02220\"\n    to_lower(met.registry_number || ', ' || v.mi_type) like '%мультиг%'\n    --c.date = '2023-02-02'\n    --and cast(v.protocol_number as integer) > 61\norder by\n    c.date desc,\n    v.id desc\n"},
{"name":"copy_record","sql":"--to copy the record with id from the verification table\nwith temp as (\n    select\n        779 as v_id\n    )\ninsert into\n    verification (\n        engineer,\n        counteragent,\n        mi_type,\n        methodology_id,\n        serial_number,\n        manufacture_year,\n        components,\n        scope,\n        channels,\n        area,\n        interval,\n        verification_type,\n        sw_name,\n        sw_version,\n        sw_version_real,\n        sw_checksum,\n        sw_algorithm,\n        voltage,\n        protocol,\n        protolang,\n        copy_from\n    )\nselect\n    engineer,\n    counteragent,\n    mi_type,\n    methodology_id,\n    serial_number,\n    manufacture_year,\n    components,\n    scope,\n    channels,\n    area,\n    interval,\n    verification_type,\n    sw_name,\n    sw_version,\n    sw_version_real,\n    sw_checksum,\n    sw_algorithm,\n    voltage,\n    protocol,\n    protolang,\n    (select v_id from temp)\nfrom\n    verification\nwhere\n    id = (select v_id from temp);\n    \n--to copy gso\nwith temp as (\n    select\n        id as v_id,\n        copy_from as v_id_from\n    from\n        verification\n    order by id desc\n    limit 1\n    )\ninsert into v_gso\nselect\n    (select v_id from temp),\n    gso_id\nfrom\n    v_gso\nwhere\n    v_id = (select v_id_from from temp);\n    \n--to copy refs\nwith temp as (\n    select\n        id as v_id,\n        copy_from as v_id_from\n    from\n        verification\n    order by id desc\n    limit 1\n    )\ninsert into v_refs\nselect\n    (select v_id from temp),\n    ref_id\nfrom\n    v_refs\nwhere\n    v_id = (select v_id_from from temp);\n    \n--to copy opt_refs\nwith temp as (\n    select\n        id as v_id,\n        copy_from as v_id_from\n    from\n        verification\n    order by id desc\n    limit 1\n    )\ninsert into v_opt_refs\nselect\n    (select v_id from temp),\n    ref_id\nfrom\n    v_opt_refs\nwhere\n    v_id = (select v_id_from from temp);\n\n--to copy v_operations\nwith temp as (\n    select\n        id as v_id,\n        copy_from as v_id_from\n    from\n        verification\n    order by id desc\n    limit 1\n    )\ninsert into v_operations\n    (v_id, op_id, comment)\nselect\n    (select v_id from temp),\n    op_id,\n    comment\nfrom\n    v_operations\nwhere\n    v_id = (select v_id_from from temp);\n\n--to copy v_operations from verification_operations\n/*with temp as (\n    select\n        id as v_id,\n        verification_type as v_type,\n        methodology_id as met_id\n    from\n        verification\n    order by id desc\n    limit 1\n    )\ninsert into v_operations\n    (v_id, op_id)\nselect\n    (select v_id from temp),\n    id\nfrom\n    verification_operations\nwhere\n    methodology_id = (select met_id from temp)\n    and verification_type <= (select v_type from temp);\n */\n \n--to copy measurements\nwith temp as (\n    select\n        id as v_id,\n        copy_from as v_id_from\n    from\n        verification\n    order by id desc\n    limit 1\n    )\ninsert into measurements\n    (v_id, metrology_id, operation_id, ref_value)\nselect\n    (select v_id from temp),\n    metrology_id,\n    operation_id,\n    ref_value\nfrom\n    measurements\nwhere\n    v_id = (select v_id_from from temp);\n    \nselect\n    *\nfrom\n    verification\nwhere\n    count is null;"},
{"name":"delete_records","sql":"--to delete the records with the id from verification, v_gso, v_refs and v_opt_refs tables\ncreate table temp_table as\n    select\n        1043 as v_id\n;\n\ndelete from\n    measurements\nwhere\n    v_id = (select v_id from temp_table);\n            \ndelete from\n    verification\nwhere id = (select v_id from temp_table);\n\ndelete from\n    v_gso\nwhere\n    v_id = (select v_id from temp_table);\n\ndelete from\n    v_refs\nwhere\n    v_id = (select v_id from temp_table);\n    \ndelete from\n    v_opt_refs\nwhere\n    v_id = (select v_id from temp_table);\n\ndelete from\n    v_operations\nwhere\n    v_id = (select v_id from temp_table);\n\ndrop table temp_table;"},
{"name":"copy_refs_from_mi","sql":"--to copy references from MI to verification records\ncreate table temp_table as\n    select\n        349 as v_id,\n        (select mi_type from verification order by id desc limit 1) as mi_id\n;\n\n--to copy gso\ninsert into v_gso\nselect\n    (select v_id from temp_table),\n    gso_id\nfrom\n    mi_gso\nwhere\n    mi_id = (select mi_id from temp_table);\n    \n--to copy gso\ninsert into v_refs\nselect\n    (select v_id from temp_table),\n    ref_id\nfrom\n    mi_references\nwhere\n    mi_id = (select mi_id from temp_table);\n    \n--to copy gso\ninsert into v_opt_refs\nselect\n    (select v_id from temp_table),\n    ref_id\nfrom\n    mi_opt_refs\nwhere\n    mi_id = (select mi_id from temp_table);\n    \ndrop table temp_table;"},
{"name":"split_some_column","sql":"--/*\ninsert into verification_operations (methodology_id, name)\nselect\n    v.methodology_id,\n    iif(\n        instr(v.full, ';') > 0,\n        trim(substr(v.full, 0, instr(v.full, ';'))),\n        iif(v.full <> '', trim(v.full), '')\n    )\nfrom\n    verification_operations as v\nwhere\n    v.full <> ''\n    and v.full is not null\n;\n--*/\n\nupdate verification_operations\nset\n    \"full\" = iif(\n        instr(\"full\", ';') < 1 and length(\"full\") > 0,\n        '',\n        trim(replace(\n            \"full\",\n            substr(\"full\", 0, instr(\"full\", ';') + 1),\n            '')\n        )\n    )\nwhere\n    \"full\" <> '' and \"full\" is not null"},
{"name":"methodology_operations","sql":"select\n    op.id,\n    met.id as methodology_id,\n    op.section,\n    op.name as name,\n    op.verification_type,\n    op.comment,\n    op.info\nfrom\n    verification as v\ninner join\n    methodology as met\n    on met.id = v.methodology_id\ninner join\n    verification_operations as op\n    on op.methodology_id = met.id\nwhere\n    --met.id = 330\n    v.id = 1058\n--group by\n--    op.id\norder by\n    section"},
{"name":"copy_refs","sql":"--to copy references\ncreate table temp_table as\n    select\n        429 as from_id,\n        --430 as to_id\n        (select id from verification order by id desc limit 1) as to_id\n;\n\ndelete from v_gso\nwhere\n    v_id = (select to_id from temp_table);\n\n--to copy gso\ninsert into v_gso\nselect\n    (select to_id from temp_table),\n    gso_id\nfrom\n    v_gso\nwhere\n    v_id = (select from_id from temp_table);\n    \ndelete from v_refs\nwhere\n    v_id = (select to_id from temp_table);\n\n--to copy references\ninsert into v_refs\nselect\n    (select to_id from temp_table),\n    ref_id\nfrom\n    v_refs\nwhere\n    v_id = (select from_id from temp_table);\n    \ndelete from v_opt_refs\nwhere\n    v_id = (select to_id from temp_table);\n\n--to copy optional references\ninsert into v_opt_refs\nselect\n    (select to_id from temp_table),\n    ref_id\nfrom\n    v_opt_refs\nwhere\n    v_id = (select from_id from temp_table);\n    \ndrop table temp_table;"},
{"name":"using_of_mi_table","sql":"select\n    *\nfrom \n    mi\nleft join\n    verification as v\n    on v.mi_type = mi.type\nwhere\n    v.mi_type is null and mi.protolang is not null"},
{"name":"measurements","sql":"select\n    meas.id,\n    meas.v_id,\n    v.serial_number,\n    meas.metrology_id,\n    meas.channel_name,\n    ifnull(ch.channel, ch.component) ||\n        ' ' || ifnull('(' || metr.r_from || ' - ' || metr.r_to || ') ' || ch.units || '; ', '') || ifnull(chr.symbol || ' ', '')\n        || ifnull(chr.comparison || ' ', '') || metr.value\n        || ' ' || ifnull(iif(metr.type_id > 0 and metr.type_id < 3, '%', metr.units), ch.units) as channel,\n    meas.value,\n    meas.value_2,\n    meas.ref_value,\n    meas.comment\nfrom\n    measurements as meas\ninner join\n    metrology as metr\n    on metr.id = meas.metrology_id\ninner join\n    channels as ch\n    on ch.id = metr.channel_id\ninner join\n    characteristics as chr\n    on chr.id = metr.type_id\ninner join\n    verification as v\n    on meas.v_id = v.id\nwhere\n    meas.v_id = 1029"},
{"name":"symbols","sql":"select\n    char(916),\n    char(948),\n    char(947),\n    char(8804),\n    char(8805)"},
{"name":"generate_protocols","sql":"with temp as (\nselect\n    '1' as id,\n    group_concat(html, ' ') as html\nfrom\n    html_protocol\nwhere\n    upload is null\n    --v_id = 464\n    --date = '2023-04-05'\ngroup by\n    id\n)\nselect\n    replace(\n'<!DOCTYPE html>    \n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"author\" content=\"Aleksandr Ermolaev\">\n    <meta name=\"e-mail\" content=\"ave6990@ya.ru\">\n    <meta name=\"version\" content=\"2023-04-19\">\n    <title>Протокол поверки</title>\n    <style type=\"text/css\">\n        html {\n            font-family: Times New Roman;\n            font-size: 12pt;\n        }\n        section {\n            position: relative;\n            height: 100%;\n            page-break-after: always;\n        }\n        .appendix-section {\n            margin: 0 0 6pt 0;\n        }\n        .capitalize {\n            text-transform: uppercase;\n        }\n        p {\n            margin: 0;\n            text-align: justify;\n        }\n        header {\n            margin: 0 0 10pt 0;\n        }\n        .header1 > p {\n            text-align: center;\n        }\n        .field {\n            margin: 0 0 6pt 0;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            border: 1px solid;\n            font-size: 10pt;\n            line-height: 0.9;\n        }\n        td, th {\n            border: 1px solid;\n        }\n        .measurement-table th {\n            max-width: 25%;\n        }\n        .centered-cell {\n            text-align: center;\n        }\n        .channel-cell {\n            white-space: nowrap;\n            min-width: 20%;\n        }\n        .sign {\n            margin: 10pt 0;\n            position: relative;\n        }\n        ol {\n            margin: 0;\n            padding: 0 0.35cm;\n        }\n        .comment {\n            font-size: 9pt;\n        }\n        footer > p {\n            position: absolute;\n            top: 26.5cm;\n            right: 0;\n        }\n        @media print {\n            @page {\n                margin: 1cm;\n            }\n        }\n        .two-column {\n            margin: 0 0 6pt 0;\n            display: flex;\n            flex-direction: row;\n        }\n        .two-column > p {\n            flex: 1;\n        }\n        .sign > img {\n        \tposition: absolute;\n         \ttop: -3.5cm;\n          \tleft: 3.5cm;\n           \ttransform: scale(0.28);\n        }\n    </style>\n    <script type=\"text/javascript\">\n        document.addEventListener(\"dblclick\", (event) => {\n            console.log(document.getElementsByClassName(\"sign_img\"))\n            const signs = document.getElementsByClassName(\"sign_img\")\n            for (const el of signs) {\n                el.style.visibility = el.style.visibility == \"visible\" ? \"hidden\" : \"visible\"\n            }\n        })\n    </script>\n</head>\n\n<body>\n$protocols\n</body>\n\n</html>',\n        '$protocols',\n        (select html from temp)) as doc"},
{"name":"view_html_protocol","sql":"SELECT\n    v.id as v_id,\n    v.protocol_number,\n    date(c.date) as date,\n    met.registry_number,\n    v.mi_type,\n    v.serial_number,\n    v.upload,\n'   <section class=\"page_1\">\n        <header class=\"header1\">\n            <p>ФБУ «ОРЕНБУРГСКИЙ ЦСМ»</p>\n            <p>460021, Оренбург, ул.60 лет Октября, 2 «Б»</p>\n            <p>тел/факс (3532) 33-37-05, факс (3532) 33-00-76</p><p><br></p>\n            <p class=\"capitalize\">протокол ' || iif(vt.name like 'первич%', 'первичной', 'периодической') || ' поверки</p>\n            <p>№ 9/' || en.number || '-' || v.protocol_number || '-' || strftime('%Y', date(c.date)) || ' от <time>' ||\n                strftime('%d.%m.%Y', date(c.date)) || '</time> г.</p>\n        </header>\n        <main>\n            <div class=field>\n                <p><strong>Наименование, тип:</strong> '|| ifnull(met.mi_name, '') || ', ' || ifnull(v.mi_type, '') || '.</p>\n            </div>\n            <div class=two-column>\n                <p><strong>Заводской номер:</strong> ' || v.serial_number || '.</p>\n                <p><strong>Год изготовления:</strong> ' || ifnull(v.manufacture_year || ' г.', '-') || '</p>\n            </div>\n            <div class=field>\n                <p><strong>Регистрационный номер:</strong> ' || met.registry_number || '.</p>\n            </div>\n            <div class=field>\n                <p><strong>В составе:</strong> ' || coalesce(v.components || '.', '-') || '</p>\n            </div>\n            <div class=field>\n                <p><strong>Поверено ' || coalesce('в объеме:</strong> ' || v.scope || '.', ':</strong> в полном объеме.') || '</p>\n            </div>\n            <div class=field>\n                <p><strong>Наименование, адрес владельца:</strong> ' || ifnull(ca.short_name, ca.name) || ifnull(', ' || ca.address, '') || '.</p>\n            </div>\n             <div class=field>\n                <p><strong>НД на поверку:</strong> ' || ifnull(met.name, met.short_name) || '.</p>\n            </div>\n            <div class=field>\n                <p><strong>Условия поверки:</strong>  температура воздуха: ' ||\n                    replace(c.temperature, '.', ',')\n                        || ifnull(' ' || replace(' (' || met.temperature || ') °C', '.', ','), '') ||\n                    ifnull('; относительная влажность: ' || replace(c.humidity, '.', ',') ||\n                        replace(' (' || met.humidity || ') %', '.', ','), '') ||\n                    ifnull('; атмосферное давление: ' || replace(c.pressure, '.', ',') || \n                        replace(' (' || met.pressure || ') кПа', '.', ','), '') ||\n                    ifnull('; напряжение питания: ' || replace(coalesce(v.voltage, c.voltage), '.', ',') ||\n                        replace(' (' || met.voltage || ') В', '.', ','), '') || \n                    ifnull('; частота сети: ' || replace(c.frequency, '.', ',') ||\n                        replace(' (' || met.frequency || ') Гц', '.', ','), '') ||\n                    ifnull('; ' || met.other, '') ||\n                '.</p>\n            </div>\n            <div class=field>\n                <p><strong>Средства поверки:</strong> ' || ifnull(view_v_refs.protocol || '; ', '') || ifnull(view_v_gso.protocol, '') ||\n                    ifnull('; ' || view_v_opt_refs.protocol, '') || '.</p>\n            </div>\n            <div class=field>\n                <p class=\"capitalize\"><strong>Результаты поверки</strong></p>\n            </div>\n            <div class=field>' || ifnull('\n                <ol>'\n                    || v_op.html ||\n'                </ol>\n', '<p>См. в приложение к протоколу.</p>\n') ||\n'            </div>\n            <div class=field>\n                <p><strong>Заключение:</strong> ' ||\n                    ifnull('СИ непригодно к применению, не соответствует п. ' ||\n                    ifnull(op.section || ' ', '') || op.name || ifnull(' ('\n                    || tv_op.unusability || ')', ''),\n                    iif(ifnull(v.scope, '') = '',\n                    'СИ пригодно к применению', 'СИ пригодно к применению в объеме проведенной поверки')) || '.</p>\n            </div>\n            <p class=\"sign\">Подпись лица выполнявшего поверку <span class=\"placeholder\">____________________</span> <img class=\"sign_img\" src=\"signs/sign_' || (random() % 36 + 36) || '.png\">' ||\n                en.last_name || ' ' || en.first_name || ' ' || en.second_name ||'</p>\n            <p>Сведения о результатах поверки переданы в ФИФ ОЕИ.</p>\n        </main>\n        <footer>\n            <p>Страница 1 из <span contenteditable=true> 2 <span></p>\n        </footer>\n    </section>\n    <section class=\"page_2\">\n        <header class=\"header2\">\n            <p>Приложение к протоколу ' || iif(vt.name like 'первич%', 'первичной', 'периодической') ||\n                ' поверки № 9/' || en.number || '-' || v.protocol_number || '-' || strftime('%Y', date(c.date)) || ' от <time>' ||\n                strftime('%d.%m.%Y', date(c.date)) || '</time> г.</p>' || '\n        </header>\n        <main>' ||\n-- Определение погрешности и вариации\n'\n            <ol>' ||\n                ifnull('\n                <li class=\"appendix-section\">\n                    <p>\n                        Подтверждение соответствия программного обеспечения:\n                    </p>\n                    <table class=\"measurement-table\">\n                        <thead>\n                            <tr>\n                                <th>Идентификационное наименование ПО</th>\n                                <th>Идентификационный номер ПО</th>' || iif(v.sw_version_real is not null, '\n                                <th>Действительный номер ПО</th>', '') || '\n                                <th>Цифровой идентификатор ПО</th>\n                                <th>Алгоритм вычисления цифрового идентификатора ПО</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th class=\"centered-cell\">' || ifnull(v.sw_name, '-') || '</th>\n                                <th class=\"centered-cell\">' || v.sw_version || '</th>' || ifnull('\n                                <th class=\"centered-cell\">' || v.sw_version_real || '</th>', '') || '\n                                <th class=\"centered-cell\">' || ifnull(v.sw_checksum, '-') || '</th>\n                                <th class=\"centered-cell\">' || ifnull(v.sw_algorithm, '-') || '</th>\n                            </tr>                        \n                        </tbody>\n                    </table>\n                </li>', '') || ifnull('\n                <li class=\"appendix-section\">\n                    <p>\n                        Определение основной погрешности:\n                    </p>\n                    <table class=\"measurement-table\">\n                        <thead>\n                            <tr>\n                                <th>Канал измерений, диапазон</th>\n                                <th>Опорное значение</th>\n                                <th>Измеренное значение</th>\n                                <th>Действительное значение основной погрешности</th>\n                                <th>Предел допускаемого значения основной погрешности</th>\n                                <th>Вариация показаний</th>\n                            </tr>\n                        </thead>\n                        <tbody>' || v_meas.html || '\n                        </tbody>\n                    </table>\n                </li>', '') ||\n-- Прочие измерения\n                ifnull('\n                ' || v_results.html || '', '') ||                \n'\n            </ol>\n        </main>\n        <footer>\n            <p>Страница 2 из <span contenteditable=true> 2 <span></p>\n        </footer>\n    </section>\n' as html\nFROM\n    verification AS v\nINNER JOIN\n    counteragents AS ca ON v.counteragent = ca.id\nINNER JOIN\n    conditions AS c ON v.conditions = c.id\nINNER JOIN\n    methodology AS met ON v.methodology_id = met.id\ninner join\n    engineers as en on v.engineer = en.id\ninner join\n    verification_types as vt on v.verification_type = vt.id\nleft join\n    view_v_operations as v_op on v.id = v_op.v_id\nleft join\n    view_measurements as v_meas on v.id = v_meas.v_id\nleft join\n    view_results as v_results on v.id = v_results.v_id\nleft join\n    v_operations as tv_op on v.id = tv_op.v_id and tv_op.result < 0\nleft join\n    verification_operations as op on tv_op.op_id = op.id\nfull outer JOIN\n    view_v_refs\n    on view_v_refs.id = v.id\nfull outer JOIN\n    view_v_gso\n    on view_v_gso.id = v.id\nfull outer JOIN\n    view_v_opt_refs\n    on view_v_opt_refs.id = v.id\nORDER BY\n    CAST (v.protocol_number AS integer)"},
{"name":"view_v_operations","sql":"select\n    v.id as v_id,\ngroup_concat('\n                    <li>\n                        <p>' || op.name || ': <em>' || iif(v_op.result = 0, '-', iif(v_op.result > 0, '', 'не ') || 'соответствует требованиям НД.') ||\n                        iif(ifnull(v_op.result, 0) < 0, ifnull('(' || v_op.unusability || ')', ''), '') || '</em></p>' ||\n                        ifnull('\n                        <p class=\"comment\">(' || op.comment || ')</p>', '') || '\n                    </li>\n', '') as html\nfrom\n    verification as v\ninner join\n    v_operations as v_op\n    on v_op.v_id = v.id\ninner join\n    verification_operations as op\n    on op.id = v_op.op_id\ngroup by\n    v_id\norder by\n    v_op.v_id, op.section"},
{"name":"not_in_verification","sql":"select\n    a.id,\n    a.mi_type,\n    a.registry_number,\n    a.methodology\nfrom\n    verification as v\ninner join\n    methodology as m\n    on v.methodology_id = m.id\nright join\n    archive as a\n    on a.registry_number = m.registry_number\n    and a.mi_type = v.mi_type\nwhere\n    v.mi_type is null\ngroup by\n    a.registry_number"},
{"name":"insert_v_operations","sql":"with temp as (\n    select\n        600 as v_id\n    )\ninsert into v_operations\nselect\n    (select v_id from temp) as v_id,\n    op.id,\n    '1',\n    null,\n    null\nfrom\n    verification as v\ninner join\n    methodology as met\n    on met.id = v.methodology_id\ninner join\n    verification_operations as op\n    on op.methodology_id = met.id\n    and op.verification_type <= v.verification_type\nwhere\n    v.id = (select v_id from temp)\n"},
{"name":"v_operations","sql":"select\n    v_op.v_id,\n    v_op.op_id,\n    op.section,\n    op.name,\n    v_op.result,\n    v_op.unusability,\n    op.comment\nfrom\n    v_operations as v_op\ninner join\n    verification_operations as op\n    on op.id = v_op.op_id\nwhere\n    v_id = 770"},
{"name":"missing_id","sql":"with recursive gen(value) as (\nselect 1\nunion all\nselect value + 1 from gen\nwhere value + 1 < 2000\n)\nselect\n    value\nfrom\n    gen\nleft join\n    verification_operations as op\n    on op.id = gen.value\nwhere\n    op.id is null"},
{"name":"view_measurements","sql":"select\n    v.id as v_id,\n    v.protocol_number,\n    date(c.date) as date,\n    --met.registry_number,\n    v.mi_type,\n    v.serial_number,\n    v.upload,\ngroup_concat('\n                        <tr>\n                            <td class=\"channel-cell\">' || ifnull(meas.channel_name || '; ', '') || ifnull(ch.channel, ch.component) || ' ' ||\n                                ifnull('(' || met.r_from || ' - ', '') || met.r_to || iif(met.r_from is null, ' ', ') ') || ch.units || '</td>' || '\n                            <td class=\"centered-cell\">' || meas.ref_value || '</td>' || '\n                            <td class=\"centered-cell\">' || ifnull(meas.value, '-') || '</td>' || '\n                            <td class=\"centered-cell\">' || ifnull(replace(round(case met.type_id\n                                when 0\n                                    then meas.value - meas.ref_value\n                                when 1\n                                    then (meas.value - meas.ref_value) / meas.ref_value * 100\n                                when 2\n                                    then (meas.value - meas.ref_value) / (met.r_to - ifnull(met.r_from, 0)) * 100\n                                else\n                                    null\n                                end, 2), '.', ','), '-') || '</td>' || '\n                            <td class=\"centered-cell\">' || chr.symbol || ' = ± ' || met.value || ' ' || ifnull(chr.units, ch.units) || '</td>' || '\n                            <td class=\"centered-cell\">' || iif(meas.value_2 is not null, replace(round(case met.type_id\n                                when 0\n                                    then (meas.value - meas.value_2) || '(' || ((meas.value - meas.value_2) / met.value) || ')'\n                                when 1\n                                    then ((meas.value - meas.value_2) / meas.ref_value) || '(' || ((meas.value - meas.value_2) / meas.ref_value / met.value) || ')'\n                                when 2\n                                    then ((meas.value - meas.value_2) / (met.r_to - ifnull(met.r_from, 0))) || '(' || ((meas.value - meas.value_2) / (met.r_to - ifnull(met.r_from, 0)) / met.value) || ')'\n                                else\n                                    null\n                                end, 3), '.', ',') || ' \n                        ', '-') || '\n                            </td>\n                        </tr>', '\n') as html\nfrom\n    verification as v\ninner join\n    measurements as meas\n    on meas.v_id = v.id\ninner join\n    metrology as met\n    on met.id = meas.metrology_id\ninner join\n    channels as ch\n    on ch.id = met.channel_id\ninner join\n    characteristics as chr\n    on chr.id = met.type_id\ninner join\n    conditions as c\n    on c.id = v.conditions\ngroup by\n    v.id"},
{"name":"view_results","sql":"select\n    v.id as v_id,\n    v.protocol_number,\n    date(c.date) as date,\n    --met.registry_number,\n    v.mi_type,\n    v.serial_number,\n    v.upload,\ngroup_concat('\n                <li class=\"appendix-section\">\n                    ' || iif(met.type_id = 15,\n    met.comment || ' ' || met.value || ' ' || ifnull(met.units, ch.units) || ' (канал измерения ' || ifnull(ch.channel, ch.component) || '): <em>' ||\n    meas.comment || '</em>',\n    iif(met.type_id > 5,\n        op.name || ' (канал измерения ' || ifnull(meas.channel_name || '; ', '') ||\n            ifnull(ch.channel, ch.component) || ' ' ||\n            ifnull('(' || ch.range_from || ' - ', '') || ch.range_to || iif(ch.range_from is null, ' ', ') ') || ch.units || '): ' ||\n            meas.value || ' ' || coalesce(met.units, ch.units, '') || ' (' ||\n            chr.comparison || ' ' || met.value || ' ' || ifnull(met.units, ch.units), null) || ')') || '.\n                </li>', ''\n) as html\nfrom\n    verification as v\ninner join\n    measurements as meas\n    on meas.v_id = v.id\ninner join\n    verification_operations as op\n    on op.id = meas.operation_id\ninner join\n    metrology as met\n    on met.id = meas.metrology_id\ninner join\n    channels as ch\n    on ch.id = met.channel_id\ninner join\n    characteristics as chr\n    on chr.id = met.type_id\ninner join\n    conditions as c\n    on c.id = v.conditions\ngroup by\n    v.id"},
{"name":"metrology","sql":"select\n    ch.id as ch_id,\n    metr.id as metr_id,\n    ifnull(ch.channel, ch.component) as channel,\n    '(' || ch.range_from || ' - ' || ch.range_to || ') ' || ch.units as rng,\n    '(' || metr.r_from || ' - ' || metr.r_to || ') ' || ch.units as subrng,\n    chr.name,\n    metr.value,\n    ifnull(iif((metr.type_id > 0 and metr.type_id < 3) or metr.type_id = 13 or metr.type_id = 14, '%', metr.units), ch.units) as units\nfrom\n    verification as v\ninner join\n    methodology as met\n    on met.id = v.methodology_id\ninner join\n    channels as ch on ch.methodology_id = met.id\ninner join\n    metrology as metr\n    on metr.channel_id = ch.id\ninner join\n    characteristics as chr\n    on chr.id = metr.type_id\nwhere\n    v.id = 862\n    --v.methodology_id = 330\ngroup by\n    metr.id\norder by\n    channel"},
{"name":"insert_into_archive","sql":"insert into\n    archive (\n        count,\n        counteragent,\n        mi_type,\n        serial_number,\n        manufacture_year,\n        registry_number,\n        methodology,\n        interval,\n        components,\n        channels,\n        reference_codes,\n        area,\n        verification_type,\n        protocol_number,\n        usability,\n        date,\n        sticker_number,\n        sign_mi,\n        sign_pass,\n        temperature,\n        humidity,\n        pressure,\n        voltage,\n        frequency,\n        factor_6,\n        factor_7,\n        factor_8,\n        schema,\n        level,\n        reference_registry,\n        scope,\n        send_protocol,\n        unusability,\n        calibration_base,\n        upload,\n        engineer,\n        comment)\nselect\n    *\nfrom\n    temp"},
{"name":"measurements","sql":"select\n    meas.id,\n    meas.v_id,\n    v.serial_number,\n    meas.metrology_id,\n    ifnull(ch.channel, ch.component) ||\n        ' ' || ifnull('(' || metr.r_from || ' - ' || metr.r_to || ') ' || ch.units || '; ', '') || ifnull(chr.symbol || ' ', '')\n        || ifnull(chr.comparison || ' ', '') || metr.value\n        || ' ' || ifnull(iif(metr.type_id > 0 and metr.type_id < 3, '%', metr.units), ch.units) as channel,\n    meas.value,\n    meas.value_2,\n    meas.ref_value,\n    meas.comment\nfrom\n    measurements as meas\ninner join\n    metrology as metr\n    on metr.id = meas.metrology_id\ninner join\n    channels as ch\n    on ch.id = metr.channel_id\ninner join\n    characteristics as chr\n    on chr.id = metr.type_id\ninner join\n    verification as v\n    on meas.v_id = v.id\nwhere\n    meas.v_id = 957"},
{"name":"methodology","sql":"select\n    *\nfrom\n    methodology\nwhere\n    to_lower(id || ', ' || registry_number || ', ' || mi_types) like '%28384%'"},
{"name":"copy_from_registry","sql":"--begin;\n    insert into\n        methodology (\n            registry_number,\n            mi_name,\n            mi_types,\n            date_to,\n            limited,\n            link_type_desc,\n            link_methodology\n        )\n    select\n        registry_number,\n        name,\n        types,\n        certificate_life,\n        party_verification,\n        type_description,\n        verification_document\n    from\n        registry.mi_registry as reg\n    where\n        reg.registry_number = '22830-08';\n--commit;\n--rollback;"},
{"name":"text_references_from_1c_numbers","sql":"insert into temp_refs\nselect\n    id,\n    iif(instr(temp_refs, 'со') = 1,\n        (select\n            ifnull('ГСО ' || number || ', паспорт № ' || pass_number || ', ' || level || '-го разряда', '')\n        from\n            gso\n        where\n            number_1c = replace(iif(instr(temp_refs, ';') > 0,\n                substr(temp_refs, 1, instr(temp_refs, ';') - 1),\n                temp_refs),\n                'со',\n                '')),\n        (select\n            ifnull(mi_name || ', ' || mi_type || ', зав. № ' || serial_number, '')\n        from\n            refs\n        where   \n            number_1c = iif(instr(temp_refs, ';') > 0,\n                substr(temp_refs, 1, instr(temp_refs, ';') - 1), \n                temp_refs))\n    )\nfrom\n    archive\nwhere\n    temp_refs <> '';\n\nupdate archive\nset\n    temp_refs = iif(instr(temp_refs, ';') = 0, '', replace(temp_refs, substr(temp_refs, 1, instr(temp_refs, ';')), ''))\nwhere\n    temp_refs <> ''"},
{"name":"html_protocol_archive","sql":"SELECT\n    --id as arch_id,\n    engineer,\n    protocol_number,\n    date(date) date,\n    registry_number,\n    mi_type,\n    serial_number,\n    upload,\n'   <section class=\"page_1\">\n        <header class=\"header1\">\n            <p>ФБУ «ОРЕНБУРГСКИЙ ЦСМ»</p>\n            <p>460021, Оренбург, ул.60 лет Октября, 2 «Б»</p>\n            <p>тел/факс (3532) 33-37-05, факс (3532) 33-00-76</p><p><br></p>\n            <p class=\"capitalize\">протокол ' || verification_type || ' поверки</p>\n            <p>№ 9/' || engineer || '-' || protocol_number || '-' || strftime('%Y', date(date)) || ' от <time>' ||\n                strftime('%d.%m.%Y', date(date)) || '</time> г.</p>\n        </header>\n        <main>\n            <div class=field>\n                <p><strong>Наименование, тип:</strong> '|| mi_type || '.</p>\n            </div>\n            <div class=two-column>\n                <p><strong>Заводской номер:</strong> ' || serial_number || '.</p>\n                <p><strong>Год изготовления:</strong> ' || ifnull(manufacture_year || ' г.', '-') || '</p>\n            </div>\n            <div class=field>\n                <p><strong>Регистрационный номер:</strong> ' || registry_number || '.</p>\n            </div>\n            <div class=field>\n                <p><strong>В составе:</strong> ' || coalesce(components || '.', '-') || '</p>\n            </div>\n            <div class=field>\n                <p><strong>Поверено ' || coalesce('в объеме:</strong> ' || iif(scope = '-' or scope = '', null, scope) || '.', ':</strong> в полном объеме.') || '</p>\n            </div>\n            <div class=field>\n                <p><strong>Наименование владельца:</strong> ' || counteragent || '.</p>\n            </div>\n             <div class=field>\n                <p><strong>НД на поверку:</strong> ' || methodology || '.</p>\n            </div>\n            <div class=field>\n                <p><strong>Условия поверки:</strong>  температура воздуха: ' ||\n                    replace(temperature, '.', ',') || ' °C' ||\n                    ifnull('; относительная влажность: ' || replace(humidity, '.', ',') || ' %', '') ||\n                    ifnull('; атмосферное давление: ' || replace(pressure, '.', ',') || ' кПа', '') ||\n                    ifnull('; напряжение питания: ' || replace(iif(voltage = '-' or voltage = '', null, voltage), '.', ',') || ' В', '') || \n                    ifnull('; частота сети: ' || replace(iif(frequency = '-' or frequency = '', null, frequency), '.', ',') || ' Гц', '') ||\n                    --ifnull('; ' || other, '') ||\n                '.</p>\n            </div>\n            <div class=field>\n                <p><strong>Средства поверки:</strong> ' || refs_text || '.</p>\n            </div>\n            <div class=field>\n                <p class=\"capitalize\"><strong>Результаты поверки</strong></p>\n            </div>\n            <div class=field><p>См. в приложение к протоколу.</p>\n           </div>\n            <div class=field>\n                <p><strong>Заключение:</strong> ' ||\n                    ifnull('СИ непригодно к применению, не соответствует п. ' ||\n                    ' (' || iif(unusability = '-' or unusability is null, null, unusability) || ')',\n                    iif(iif(scope = '-' or scope is null, '', scope) = '',\n                    'СИ пригодно к применению', 'СИ пригодно к применению в объеме проведенной поверки')) || '.</p>\n            </div>\n            <p class=\"sign\">Подпись лица выполнявшего поверку <span class=\"placeholder\">____________________</span> <img class=\"sign_img\" src=\"signs/sign_' || (random() % 36 + 36) || '.png\">' ||\n                en.last_name || ' ' || en.first_name || ' ' || en.second_name ||'</p>\n            <p>Сведения о результатах поверки переданы в ФИФ ОЕИ.</p>\n        </main>\n        <footer>\n            <p>Страница 1 из <span contenteditable=true> 2 <span></p>\n        </footer>\n    </section>\n    <section class=\"page_2\">\n        <header class=\"header2\">\n            <p>Приложение к протоколу ' || iif(verification_type like 'первич%', 'первичной', 'периодической') ||\n                ' поверки № 9/' || en.number || '-' || protocol_number || '-' || strftime('%Y', date(date)) || ' от <time>' ||\n                strftime('%d.%m.%Y', date(date)) || '</time> г.</p>' || '\n        </header>\n        <main>\n        </main>\n        <footer>\n            <p>Страница 2 из <span contenteditable=true> 2 <span></p>\n        </footer>\n    </section>\n' as html\nfrom\n    archive\ninner join\n    engineers as en on archive.engineer = en.number\nORDER BY\n    CAST (protocol_number AS integer)"},
{"name":"html_protocol_archive","sql":"with temp as (\nselect\n    '1' as tmp,\n    group_concat(html, ' ') as html\nfrom\n    html_protocol_archive\nwhere\n    engineer = 61\n    and date >= '2022-01-01'\n    and date <= '2022-12-31'\n    and (\n        protocol_number = 1525\n        or protocol_number = 1579\n        or (cast(protocol_number as integer) >= 1606 and cast(protocol_number as integer) <= 1610)\n        or (cast(protocol_number as integer) >= 1615 and cast(protocol_number as integer) <= 1616)\n        or protocol_number = 1619\n        or (cast(protocol_number as integer) >= 1822 and cast(protocol_number as integer) <= 1826)\n        or (cast(protocol_number as integer) >= 1828 and cast(protocol_number as integer) <= 1829)    \n        or protocol_number = 1881\n        or (cast(protocol_number as integer) >= 1916 and cast(protocol_number as integer) <= 1922)\n        or (cast(protocol_number as integer) >= 1972 and cast(protocol_number as integer) <= 1974)        \n        or (cast(protocol_number as integer) >= 2090 and cast(protocol_number as integer) <= 2113)\n        or (cast(protocol_number as integer) >= 2116 and cast(protocol_number as integer) <= 2117)\n        or protocol_number = 2193\n        or protocol_number = 2196\n        or protocol_number = 2215\n        or (cast(protocol_number as integer) >= 2217 and cast(protocol_number as integer) <= 2218)\n        or protocol_number = 2222\n        or (cast(protocol_number as integer) >= 2233 and cast(protocol_number as integer) <= 2237)\n        or (cast(protocol_number as integer) >= 2241 and cast(protocol_number as integer) <= 2243)\n        or (cast(protocol_number as integer) >= 2264 and cast(protocol_number as integer) <= 2301)\n        or (cast(protocol_number as integer) >= 2396 and cast(protocol_number as integer) <= 2411)\n        or protocol_number = 2414\n        or protocol_number = 2420\n        or (cast(protocol_number as integer) >= 2541 and cast(protocol_number as integer) <= 2543)\n        or (cast(protocol_number as integer) >= 2607 and cast(protocol_number as integer) <= 2608)\n        or protocol_number = 2647\n        or protocol_number = 2671\n        or (cast(protocol_number as integer) >= 2862 and cast(protocol_number as integer) <= 2870)\n        or (cast(protocol_number as integer) >= 2924 and cast(protocol_number as integer) <= 2925)\n        or protocol_number = 2950\n        or protocol_number = 2984\n        or (cast(protocol_number as integer) >= 2988 and cast(protocol_number as integer) <= 3029)\n        or (cast(protocol_number as integer) >= 3040 and cast(protocol_number as integer) <= 3076)\n    )\n    \ngroup by\n    tmp\n)\nselect\n    replace(\n'<!DOCTYPE html>    \n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"author\" content=\"Aleksandr Ermolaev\">\n    <meta name=\"e-mail\" content=\"ave6990@ya.ru\">\n    <meta name=\"version\" content=\"2023-04-19\">\n    <title>Протокол поверки</title>\n    <style type=\"text/css\">\n        html {\n            font-family: Times New Roman;\n            font-size: 12pt;\n        }\n        section {\n            position: relative;\n            height: 100%;\n            page-break-after: always;\n        }\n        .appendix-section {\n            margin: 0 0 6pt 0;\n        }\n        .capitalize {\n            text-transform: uppercase;\n        }\n        p {\n            margin: 0;\n            text-align: justify;\n        }\n        header {\n            margin: 0 0 10pt 0;\n        }\n        .header1 > p {\n            text-align: center;\n        }\n        .field {\n            margin: 0 0 6pt 0;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            border: 1px solid;\n            font-size: 10pt;\n            line-height: 0.9;\n        }\n        td, th {\n            border: 1px solid;\n        }\n        .measurement-table th {\n            max-width: 25%;\n        }\n        .centered-cell {\n            text-align: center;\n        }\n        .channel-cell {\n            white-space: nowrap;\n            min-width: 20%;\n        }\n        .sign {\n            margin: 10pt 0;\n            position: relative;\n        }\n        ol {\n            margin: 0;\n            padding: 0 0.35cm;\n        }\n        .comment {\n            font-size: 9pt;\n        }\n        footer > p {\n            position: absolute;\n            top: 26.5cm;\n            right: 0;\n        }\n        @media print {\n            @page {\n                margin: 1cm;\n            }\n        }\n        .two-column {\n            margin: 0 0 6pt 0;\n            display: flex;\n            flex-direction: row;\n        }\n        .two-column > p {\n            flex: 1;\n        }\n        .sign > img {\n        \tposition: absolute;\n         \ttop: -3.5cm;\n          \tleft: 3.5cm;\n           transform: scale(0.28);\n        }\n    </style>\n    <script type=\"text/javascript\">\n        document.addEventListener(\"dblclick\", (event) => {\n            console.log(document.getElementsByClassName(\"sign_img\"))\n            const signs = document.getElementsByClassName(\"sign_img\")\n            for (const el of signs) {\n                el.style.visibility = el.style.visibility == \"visible\" ? \"hidden\" : \"visible\"\n            }\n        })\n    </script>\n</head>\n\n<body>\n$protocols\n</body>\n\n</html>',\n        '$protocols',\n        (select html from temp)) as doc"}]
